@IsTest
public class TaxationControllerTest {
    
    @isTest
    public static void testMethod1(){
        Case cas = new Case();
        cas.Origin = 'Email';
        cas.Status = 'Pending Student Checklist Form Submission';
        insert cas;
        DataMapper dm = new DataMapper();
        dm.firstName = 'test';
        dm.middleName = 'middle';
        dm.lastName = 'lastname';
        dm.ssn = 'testa';
        dm.dateOfBirth = System.today();
        dm.visa = 'test';
        dm.firstPortEntry = System.today();
        dm.changeInVisaStatus = 'false';
        dm.noOfMonthsForCurrentYear = 12;
        dm.stayed183Days = true;
        dm.maritalStatus = 'tes';
        dm.dateOfmarriage = System.today();
        dm.currentAddress = 'test';
        dm.jobTitle = 'test';
        dm.cellNumber = 5211241;
        dm.homeNumber = 2123121;
        dm.email = 'TEST@asc.com';
        dm.insuranceByEmployer = true;
        dm.otherHealthCover = false;
        dm.noOfDaysInCurrent = 1;
        dm.noOfDaysInCurrentMinus1 = 2;
        dm.noOfDaysInCurrentMinus2 = 1;
        dm.typeOfReturnForCurrentMinus1 = '1';
        dm.dependents = true;
        dm.showChild1 = true;
        dm.showChild2 = true;
        dm.showDependent = true;
        dm.child1FirstName = 'test';
        dm.child1MiddleName = 'test';
        dm.child1LastName = 'te';
        dm.child1Relationship = 'test';
        dm.child1dob = System.today();
        dm.child1ssn = 'test';
        dm.child1VisaStatus = 'test';
        dm.child1FirstPortEntry = System.today();
        dm.child1noofdays = 1;
        dm.child1DependentName = 'test';
        dm.child1InstitutionName = 'test';
        dm.child1InsFedId = 'test';
        dm.child1InsAddress = 'test';
        dm.child1Amount = 12;
        dm.child1AmountReimbursed = 12;
        dm.child2FirstName = 'test';
        dm.child2MiddleName = 'test';
        dm.child2LastName = 'test';
        dm.child2Relationship = 'test';
        dm.child2dob = System.today();
        dm.child2ssn = 'tes';
        dm.child2VisaStatus = 'test';
        dm.child2FirstPortEntry = System.today();
        dm.child2noofdays = 123;
        dm.child2DependentName = 'test';
        dm.child2InstitutionName ='test';
        dm.child2InsFedId = 'test';
        dm.child2InsAddress = 'tes';
        dm.child2Amount = 123;
        dm.child2AmountReimbursed = 12312;
        dm.accountName = 'test';
        dm.bankName = 'test';
        dm.bankRouting = 'test';
        dm.accountNumber = 123123;
        dm.accountType = 'test';
        dm.residencyDetails = true;
        dm.resCurrentYear = true;
        dm.resCurrentYearMinus1 = true;
        dm.resCurrentYearMinus2 = true;
        dm.currentStatesResided = 'test';
        dm.currentStayStartDate = System.today();
        dm.currentStayEndDate = System.today();
        dm.currentMinus1StatesResided = 'test';
        dm.currentMinus1StayStartDate = System.today();
        dm.currentMinus1StayEndDate = System.today();
        dm.currentMinus2StatesResided = 'tes';
        dm.currentMinus2StayStartDate = System.today();
        dm.currentMinus2StayEndDate = System.today();
        dm.mipAmount = 123;
        dm.pdAmount = 213;
        dm.glassAmount = 123;
        dm.hospitalChargesAmount = 123;
        dm.doctorAmount = 123;
        dm.maternityAmount = 123;
        dm.milesAmount = 123;
        dm.realEstatePrimaryRes = 123;
        dm.realEstateSecondaryRes = 123;
        dm.personalPropertyTax = 123;
        dm.stateTaxReturnTax = 123;
        dm.primaryHomeMortgageInterest = 123;
        dm.primaryHomeMortgageIntPaid = 123;
        dm.primaryMortgageInsPaid = 123;
        dm.secondaryHomeMortgageInterest = 123;
        dm.secondaryHomeMortgageIntPaid = 123;
        dm.secondaryMortgageInsPaid = 123;
        dm.commentsToPreparer = 'wdcas';
        dm.educatorExpense = '1231';
        dm.hsaContribution = '12312';
        dm.penaltyEarlyWithdrawlSaving ='123';
        dm.alimonyPaid = 'asd';
        dm.receipientssn = 'tasd';
        dm.iraContribution = 'asdcas';
        dm.studentLoan = 'asdca';
        dm.higherEdTutionFee = 'asdc';
        dm.moreThan10000 = 'asdcdas';
        dm.moreThan50000 = 'asdc';
        dm.hasRentalIncome = 'asdc';
        dm.hasBusinessIncome = 'asdc';
        dm.hasIOWAIncome = 'asdcs';
        dm.hasMassachusetts = 'asdca';
        dm.casualtyTheftLoses = 'asdcasd';
        dm.estimatedTax = 'asdcas';
        dm.notes = 'asdcad';
        dm.filenameList = new List<String>();
        dm.filenameList.add('1098-T');
        dm.bankDetails = new List<ForeignBankDetails>();
        ForeignBankDetails fbd = new ForeignBankDetails();
        fbd.nameofcountry = 'test';
        fbd.dividendincome = 123;
        fbd.interestincome = 123;
        fbd.rentalincome = 123;
        fbd.salaryincome = 123;
        dm.bankDetails.add(fbd); 

        PageReference pageRef = Page.SyrianTaxationBasePage;
        Test.setCurrentPageReference(pageRef);
		pageRef.getParameters().put('caseId',cas.Id);
        TaxationController tc = new TaxationController();
        tc.taxx = dm;
        tc.getShowPrev();
        tc.getShowNext();
        tc.getShowSave();
        tc.nextPage();
        tc.prevPage();
        tc.nextPage();
        tc.nextPage();
        tc.nextPage();
        tc.nextPage();
        tc.nextPage();
        tc.nextPage();
        tc.updatePage();
        tc.updateData();
        tc.dependentUpdates();
        tc.residencyUpdates();
        tc.handleValueChange();
        tc.handleVisaChange();
        tc.handleDependents();
        tc.addDepend();
        tc.getShowAddressAdd();
        tc.saveMe();
        Taxation__c t = [SELECT Id FROM Taxation__c LIMIT 1];
        PageReference pageRef2 = Page.SyrianTaxationBasePage;
        Test.setCurrentPageReference(pageRef2);
		pageRef2.getParameters().put('taxId',t.Id);
        TaxationController tacCNew = new TaxationController();
    }
    
     @isTest
    public static void testMethod2(){
        Case cas = new Case();
        cas.Origin = 'Email';
        cas.Status = 'Pending Student Checklist Form Submission';
        insert cas;
        
        Taxation__c tax = new Taxation__c();
        tax.business_income_this_tax_year__c  = true;
        tax.Case__c = cas.Id;
        tax.Casualty_and_Theft_Loss__c = true;
        tax.Change_in_Visa_Status__c = 'test';
        tax.Child_1_Show__c = true;
        tax.Child_2_Show__c = true;
        tax.Comments_to_Preparer__c = 'testa';
        tax.Covered_by_Massachutteus_Insurance__c = true;
        tax.Current_Address__c = 'test';
        tax.Date_of_Birth__c = system.today();
        tax.Date_of_Marriage__c = system.today();
        tax.dependents__c = true;
        tax.Doctor_Dental_Orthodontist__c = 123;
        tax.Email_Id__c = 'test@test.com';
        tax.Estimated_tax_paid__c = true;
        tax.Filed_IOWA_tax_this_year__c = true;
        tax.First_Name__c = 'test';
        tax.First_Port_of_Entry_Date_into_US__c = system.today();
        tax.Glasses_Contacts__c = 123;
        tax.health_coverage_by_employer__c = true;
        tax.Home_Number__c = '123123';
        tax.More_than_10000_in_FA_during_tax_year__c = true;
        tax.Mobile_Number__c = '98989898';
        tax.Home_Number__c = '423423';
        insert tax;

        PageReference pageRef = Page.SyrianTaxationBasePage;
        Test.setCurrentPageReference(pageRef);
		pageRef.getParameters().put('taxId',tax.Id);
        TaxationController tc = new TaxationController();
        tc.getShowPrev();
        tc.getShowNext();
        tc.getShowSave();
        tc.nextPage();
        tc.prevPage();
        tc.nextPage();
        tc.nextPage();
        tc.nextPage();
        tc.nextPage();
        tc.nextPage();
        tc.nextPage();
        tc.updatePage();
        tc.updateData();
        tc.dependentUpdates();
        tc.residencyUpdates();
        tc.handleValueChange();
        tc.handleVisaChange();
        tc.handleDependents();
        tc.addDepend();
        tc.getShowAddressAdd();
        tc.saveMe();
    }
}